const e=JSON.parse('{"key":"v-f85f332c","path":"/article/ES6/ES6.html","title":"ES6","lang":"zh-CN","frontmatter":{"title":"ES6","index":false,"icon":"http","category":["ES6"],"summary":"var、let和const区别 var是es6之前用来声明变量的关键字，let和const是es6新增的声明变量的关键字。 var声明的变量属于函数作用域，而let和const声明的变量属于块级作用域。 var存在变量提升，而let和const不存在，变量提升就是可以在声明前访问它。 var在全局作用域下声明的变量会被挂载到window对象上，而let和co","head":[["meta",{"property":"og:url","content":"https://hler66.github.io/myBlogs/article/ES6/ES6.html"}],["meta",{"property":"og:site_name","content":"Hler"}],["meta",{"property":"og:title","content":"ES6"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://hler66.github.io/myBlogs/en/article/ES6/ES6.html"}]]},"excerpt":"","headers":[{"level":2,"title":"var、let和const区别","slug":"var、let和const区别","link":"#var、let和const区别","children":[]},{"level":2,"title":"对象新增扩展：","slug":"对象新增扩展","link":"#对象新增扩展","children":[]},{"level":2,"title":"**数组**新增扩展：","slug":"数组-新增扩展","link":"#数组-新增扩展","children":[]},{"level":2,"title":"**函数**新增扩展：","slug":"函数-新增扩展","link":"#函数-新增扩展","children":[]},{"level":2,"title":"**Set Map**两种数据结构如何理解?","slug":"set-map-两种数据结构如何理解","link":"#set-map-两种数据结构如何理解","children":[]},{"level":2,"title":"**Promise**理解与应用场景","slug":"promise-理解与应用场景","link":"#promise-理解与应用场景","children":[]},{"level":2,"title":"**Proxy**理解,使用场景有哪些?","slug":"proxy-理解-使用场景有哪些","link":"#proxy-理解-使用场景有哪些","children":[]},{"level":2,"title":"Reflect 需要在内部调用对象的默认行为, 建议使用Reflect","slug":"reflect-需要在内部调用对象的默认行为-建议使用reflect","link":"#reflect-需要在内部调用对象的默认行为-建议使用reflect","children":[]},{"level":2,"title":"**Generator函数**和其使用场景","slug":"generator函数-和其使用场景","link":"#generator函数-和其使用场景","children":[]},{"level":2,"title":"module模块化","slug":"module模块化","link":"#module模块化","children":[]}],"git":{},"readingTime":{"minutes":10.61,"words":3182},"filePathRelative":"article/ES6/ES6.md"}');export{e as data};
